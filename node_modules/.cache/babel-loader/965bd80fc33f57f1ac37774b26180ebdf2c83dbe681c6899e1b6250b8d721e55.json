{"ast":null,"code":"const initialState = {\n  currentStep: 1,\n  formData: {\n    firstName: '',\n    lastName: '',\n    applicationDate: '',\n    country: '',\n    proceed: ''\n  }\n};\nfunction formReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_STEP':\n      return {\n        ...state,\n        currentStep: action.payload\n      };\n    case 'FORM_INPUT_CHANGE':\n      return {\n        ...state,\n        formData: {\n          ...state.formData,\n          ...action.payload\n        }\n      };\n    case 'FORM_SUBMISSION_SUCCESS':\n      // Handle success (e.g., reset form, show success message)\n      return {\n        ...state,\n        formData: initialState.formData // Reset form data or update state as needed\n      };\n    case 'FORM_SUBMISSION_FAILURE':\n      // Handle failure (e.g., store error message in state)\n      return {\n        ...state,\n        submissionError: action.payload // Assuming you add this field to your state\n      };\n    default:\n      return state;\n  }\n}\nexport default formReducer;","map":{"version":3,"names":["initialState","currentStep","formData","firstName","lastName","applicationDate","country","proceed","formReducer","state","action","type","payload","submissionError"],"sources":["/Users/nikhils/Documents/meghana/Redux-from/src/redux/reducer.js"],"sourcesContent":["const initialState = {\n    currentStep: 1,\n    formData: {\n      firstName: '',\n      lastName: '',\n      applicationDate: '',\n      country: '',\n      proceed: '',\n    },\n  };\n  \n  function formReducer(state = initialState, action) {\n    switch (action.type) {\n      case 'SET_STEP':\n        return {\n          ...state,\n          currentStep: action.payload,\n        };\n      case 'FORM_INPUT_CHANGE':\n        return {\n          ...state,\n          formData: {\n            ...state.formData,\n            ...action.payload,\n          },\n        };\n        case 'FORM_SUBMISSION_SUCCESS':\n      // Handle success (e.g., reset form, show success message)\n      return {\n        ...state,\n        formData: initialState.formData, // Reset form data or update state as needed\n      };\n    case 'FORM_SUBMISSION_FAILURE':\n      // Handle failure (e.g., store error message in state)\n      return {\n        ...state,\n        submissionError: action.payload, // Assuming you add this field to your state\n      };\n      default:\n        return state;\n    }\n  }\n  \n  export default formReducer;\n  \n\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,WAAW,EAAE,CAAC;EACdC,QAAQ,EAAE;IACRC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE,EAAE;IACnBC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX;AACF,CAAC;AAED,SAASC,WAAWA,CAACC,KAAK,GAAGT,YAAY,EAAEU,MAAM,EAAE;EACjD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QACL,GAAGF,KAAK;QACRR,WAAW,EAAES,MAAM,CAACE;MACtB,CAAC;IACH,KAAK,mBAAmB;MACtB,OAAO;QACL,GAAGH,KAAK;QACRP,QAAQ,EAAE;UACR,GAAGO,KAAK,CAACP,QAAQ;UACjB,GAAGQ,MAAM,CAACE;QACZ;MACF,CAAC;IACD,KAAK,yBAAyB;MAChC;MACA,OAAO;QACL,GAAGH,KAAK;QACRP,QAAQ,EAAEF,YAAY,CAACE,QAAQ,CAAE;MACnC,CAAC;IACH,KAAK,yBAAyB;MAC5B;MACA,OAAO;QACL,GAAGO,KAAK;QACRI,eAAe,EAAEH,MAAM,CAACE,OAAO,CAAE;MACnC,CAAC;IACD;MACE,OAAOH,KAAK;EAChB;AACF;AAEA,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}