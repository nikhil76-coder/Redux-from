{"ast":null,"code":"var _jsxFileName = \"/Users/nikhils/Documents/meghana/Redux-from/src/Components/StepTwo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { countries } from './countries';\nimport './StepTwo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StepTwo() {\n  _s();\n  const dispatch = useDispatch();\n  const formData = useSelector(state => state.formData);\n  const [detailsChecked, setDetailsChecked] = useState(false);\n  const nextStep = () => {\n    dispatch({\n      type: 'SET_STEP',\n      payload: 3\n    });\n  };\n  const handleRadioChange = e => {\n    setDetailsChecked(e.target.value === 'yes');\n  };\n\n  // Add this function\n  async function submitFormData() {\n    dispatch({\n      type: 'SUBMIT_FORM_START'\n    }); // Indicate submission start\n    try {\n      const response = await fetch('https://example.com/api/submitForm', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        dispatch({\n          type: 'SUBMIT_FORM_SUCCESS'\n        });\n        // Handle successful submission (e.g., navigate to a confirmation page)\n      } else {\n        throw new Error('Failed to submit form data');\n      }\n    } catch (error) {\n      dispatch({\n        type: 'SUBMIT_FORM_FAILURE',\n        payload: error.message\n      });\n      // Handle error (e.g., show an error message to the user)\n    }\n  }\n\n  // Call this function when you want to submit the form data\n  const handleSubmit = () => {\n    if (detailsChecked) {\n      submitFormData();\n    } else {\n      // Handle case where details are not checked\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: !detailsChecked,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(StepTwo, \"6KmElszL1LJoaXSG69vUNIcNEbk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = StepTwo;\nexport default StepTwo;\nvar _c;\n$RefreshReg$(_c, \"StepTwo\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","countries","jsxDEV","_jsxDEV","StepTwo","_s","dispatch","formData","state","detailsChecked","setDetailsChecked","nextStep","type","payload","handleRadioChange","e","target","value","submitFormData","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","message","handleSubmit","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nikhils/Documents/meghana/Redux-from/src/Components/StepTwo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { countries } from './countries';\nimport './StepTwo.css';\n\nfunction StepTwo() {\n  const dispatch = useDispatch();\n  const formData = useSelector(state => state.formData);\n  const [detailsChecked, setDetailsChecked] = useState(false);\n\n  const nextStep = () => {\n    dispatch({ type: 'SET_STEP', payload: 3 });\n  };\n\n  const handleRadioChange = (e) => {\n    setDetailsChecked(e.target.value === 'yes');\n  };\n\n  // Add this function\n  async function submitFormData() {\n    dispatch({ type: 'SUBMIT_FORM_START' }); // Indicate submission start\n    try {\n      const response = await fetch('https://example.com/api/submitForm', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        dispatch({ type: 'SUBMIT_FORM_SUCCESS' });\n        // Handle successful submission (e.g., navigate to a confirmation page)\n      } else {\n        throw new Error('Failed to submit form data');\n      }\n    } catch (error) {\n      dispatch({ type: 'SUBMIT_FORM_FAILURE', payload: error.message });\n      // Handle error (e.g., show an error message to the user)\n    }\n  }\n\n  // Call this function when you want to submit the form data\n  const handleSubmit = () => {\n    if (detailsChecked) {\n      submitFormData();\n    } else {\n      // Handle case where details are not checked\n    }\n  };\n\n  return (\n    <div>\n      {/* Your existing JSX */}\n      <button onClick={handleSubmit} disabled={!detailsChecked}>Submit</button>\n    </div>\n  );\n}\n\nexport default StepTwo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,aAAa;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,QAAQ,CAAC;EACrD,MAAM,CAACE,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMa,QAAQ,GAAGA,CAAA,KAAM;IACrBL,QAAQ,CAAC;MAAEM,IAAI,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/BL,iBAAiB,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,KAAK,KAAK,CAAC;EAC7C,CAAC;;EAED;EACA,eAAeC,cAAcA,CAAA,EAAG;IAC9BZ,QAAQ,CAAC;MAAEM,IAAI,EAAE;IAAoB,CAAC,CAAC,CAAC,CAAC;IACzC,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ;MAC/B,CAAC,CAAC;MAEF,IAAIY,QAAQ,CAACO,EAAE,EAAE;QACfpB,QAAQ,CAAC;UAAEM,IAAI,EAAE;QAAsB,CAAC,CAAC;QACzC;MACF,CAAC,MAAM;QACL,MAAM,IAAIe,KAAK,CAAC,4BAA4B,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdtB,QAAQ,CAAC;QAAEM,IAAI,EAAE,qBAAqB;QAAEC,OAAO,EAAEe,KAAK,CAACC;MAAQ,CAAC,CAAC;MACjE;IACF;EACF;;EAEA;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIrB,cAAc,EAAE;MAClBS,cAAc,CAAC,CAAC;IAClB,CAAC,MAAM;MACL;IAAA;EAEJ,CAAC;EAED,oBACEf,OAAA;IAAA4B,QAAA,eAEE5B,OAAA;MAAQ6B,OAAO,EAAEF,YAAa;MAACG,QAAQ,EAAE,CAACxB,cAAe;MAAAsB,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV;AAAChC,EAAA,CApDQD,OAAO;EAAA,QACGL,WAAW,EACXC,WAAW;AAAA;AAAAsC,EAAA,GAFrBlC,OAAO;AAsDhB,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}