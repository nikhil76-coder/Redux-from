{"ast":null,"code":"var _jsxFileName = \"/Users/nikhils/Documents/meghana/Redux-from/src/Components/StepOne.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { countries } from './countries'; // Ensure you have this file with the countries array\nimport './StepOne.css'; // Your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StepOne() {\n  _s();\n  const dispatch = useDispatch();\n  const formData = useSelector(state => state.formData);\n  const handleChange = e => {\n    dispatch({\n      type: 'FORM_INPUT_CHANGE',\n      payload: {\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n  const nextStep = () => {\n    dispatch({\n      type: 'SET_STEP',\n      payload: 2\n    });\n  };\n\n  // Check if all required fields are filled\n  const allFieldsFilled = formData.firstName && formData.lastName && formData.applicationDate && formData.country;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stepOne-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"stepOne-input\",\n      type: \"text\",\n      name: \"firstName\",\n      value: formData.firstName,\n      onChange: handleChange,\n      placeholder: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"stepOne-input\",\n      type: \"text\",\n      name: \"lastName\",\n      value: formData.lastName,\n      onChange: handleChange,\n      placeholder: \"Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"stepOne-input\",\n      type: \"date\",\n      name: \"applicationDate\",\n      value: formData.applicationDate,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"stepOne-select\",\n      name: \"country\",\n      value: formData.country,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country.name,\n        children: country.name\n      }, country.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"stepOne-button\",\n      onClick: nextStep,\n      disabled: !allFieldsFilled,\n      children: \"Save and Proceed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(StepOne, \"A5W0q+dHWDkWS8Lgk2jRFPTuPkc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = StepOne;\nexport default StepOne;\nvar _c;\n$RefreshReg$(_c, \"StepOne\");","map":{"version":3,"names":["React","useDispatch","useSelector","countries","jsxDEV","_jsxDEV","StepOne","_s","dispatch","formData","state","handleChange","e","type","payload","target","name","value","nextStep","allFieldsFilled","firstName","lastName","applicationDate","country","className","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","code","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/nikhils/Documents/meghana/Redux-from/src/Components/StepOne.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { countries } from './countries'; // Ensure you have this file with the countries array\nimport './StepOne.css'; // Your CSS file for styling\n\nfunction StepOne() {\n  const dispatch = useDispatch();\n  const formData = useSelector(state => state.formData);\n\n  const handleChange = (e) => {\n    dispatch({\n      type: 'FORM_INPUT_CHANGE',\n      payload: { [e.target.name]: e.target.value },\n    });\n  };\n\n  const nextStep = () => {\n    dispatch({ type: 'SET_STEP', payload: 2 });\n  };\n\n  // Check if all required fields are filled\n  const allFieldsFilled = formData.firstName && formData.lastName && formData.applicationDate && formData.country;\n\n  return (\n    <div className=\"stepOne-container\">\n      <input\n        className=\"stepOne-input\"\n        type=\"text\"\n        name=\"firstName\"\n        value={formData.firstName}\n        onChange={handleChange}\n        placeholder=\"First Name\"\n      />\n      <input\n        className=\"stepOne-input\"\n        type=\"text\"\n        name=\"lastName\"\n        value={formData.lastName}\n        onChange={handleChange}\n        placeholder=\"Last Name\"\n      />\n      <input\n        className=\"stepOne-input\"\n        type=\"date\"\n        name=\"applicationDate\"\n        value={formData.applicationDate}\n        onChange={handleChange}\n      />\n      <select\n        className=\"stepOne-select\"\n        name=\"country\"\n        value={formData.country}\n        onChange={handleChange}\n      >\n        <option value=\"\">Select a country</option>\n        {countries.map(country => (\n          <option key={country.code} value={country.name}>{country.name}</option>\n        ))}\n      </select>\n      <button\n        className=\"stepOne-button\"\n        onClick={nextStep}\n        disabled={!allFieldsFilled}\n      >\n        Save and Proceed\n      </button>\n    </div>\n  );\n}\n\nexport default StepOne;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}